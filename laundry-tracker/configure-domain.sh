#!/bin/bash

# Domain Configuration Script for Laundry Tracker
# This script helps you quickly configure your domain

echo "🚀 Laundry Tracker Domain Configuration"
echo "========================================"
echo ""

# Check if domain is provided
if [ -z "$1" ]; then
    echo "Usage: ./configure-domain.sh https://yourdomain.com"
    echo "Example: ./configure-domain.sh https://laundrytracker.com"
    exit 1
fi

DOMAIN=$1

# Validate domain format
if [[ ! $DOMAIN =~ ^https:// ]]; then
    echo "❌ Error: Domain must start with https://"
    echo "Example: ./configure-domain.sh https://laundrytracker.com"
    exit 1
fi

echo "📝 Configuring for domain: $DOMAIN"
echo ""

# Create production environment file
cat > .env.production << EOF
# Production Environment Configuration
# Generated by configure-domain.sh

# Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL=\${NEXT_PUBLIC_SUPABASE_URL}
NEXT_PUBLIC_SUPABASE_ANON_KEY=\${NEXT_PUBLIC_SUPABASE_ANON_KEY}
SUPABASE_SERVICE_ROLE_KEY=\${SUPABASE_SERVICE_ROLE_KEY}

# Production Domain
NEXT_PUBLIC_SITE_URL=$DOMAIN

# Web Push (VAPID)
WEB_PUSH_PUBLIC_VAPID_KEY=\${WEB_PUSH_PUBLIC_VAPID_KEY}
WEB_PUSH_PRIVATE_VAPID_KEY=\${WEB_PUSH_PRIVATE_VAPID_KEY}
WEB_PUSH_CONTACT=mailto:admin@$(echo $DOMAIN | sed 's|https://||')

# Client-side VAPID key
NEXT_PUBLIC_VAPID_PUBLIC_KEY=\${NEXT_PUBLIC_VAPID_PUBLIC_KEY}
EOF

echo "✅ Created .env.production file"

# Update package.json with production scripts
if [ -f "package.json" ]; then
    # Add production scripts if they don't exist
    if ! grep -q "build:prod" package.json; then
        npm pkg set scripts.build:prod="NODE_ENV=production next build"
        npm pkg set scripts.start:prod="NODE_ENV=production next start"
        echo "✅ Added production scripts to package.json"
    fi
fi

echo ""
echo "📋 Supabase Configuration Required:"
echo "===================================="
echo "1. Go to your Supabase Dashboard"
echo "2. Navigate to Authentication → URL Configuration"
echo "3. Update the following settings:"
echo ""
echo "   Site URL:"
echo "   $DOMAIN"
echo ""
echo "   Redirect URLs:"
echo "   $DOMAIN/auth/callback"
echo "   $DOMAIN/login"
echo "   $DOMAIN/logout"
echo ""
echo "4. Go to Settings → API"
echo "5. Add to Additional redirect URLs:"
echo "   $DOMAIN"
echo ""
echo "📧 Email Template Updates:"
echo "=========================="
echo "1. Go to Authentication → Email Templates"
echo "2. Update 'Confirm signup' template:"
echo "   Subject: Confirm your signup"
echo "   Body: <a href=\"{{ .ConfirmationURL }}\">Confirm your email</a>"
echo ""
echo "3. Update 'Reset password' template:"
echo "   Subject: Reset your password"
echo "   Body: <a href=\"{{ .ConfirmationURL }}\">Reset password</a>"
echo ""
echo "🔒 Security Checklist:"
echo "====================="
echo "✅ Ensure your domain uses HTTPS"
echo "✅ SSL certificate is valid"
echo "✅ Test email verification flow"
echo "✅ Test push notifications"
echo "✅ Test from different browsers"
echo ""
echo "📖 For detailed instructions, see DOMAIN_SETUP.md"
echo ""
echo "🎉 Domain configuration complete!"
echo "   Next: Deploy your application and test the authentication flow"

